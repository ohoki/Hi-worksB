<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.worksb.hi.project.mapper.ProjectMapper">
	<!-- 이진 -->
	<!-- 프로젝트 등록 -->
	<insert id="insertProject" parameterType="ProjectVO">
		<selectKey keyProperty="projectId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(project_id), 0) + 1
			FROM project
		</selectKey>
		INSERT INTO project
						(
							project_id,
							project_name,
							project_access,
							manager_accp,
							write_access,
							update_access,
							board_access,
							comment_access,
							file_access,
							dept_id,
							project_cls
						)
						
				VALUES 	(
						#{projectId},
						#{projectName},
						#{projectAccess},
						#{managerAccp},
						#{writeAccess},
						#{updateAccess},
						#{boardAccess},
						#{commentAccess},
						#{fileAccess},
						#{deptId},
						'A2'
						)
	</insert>
	
	<select id="getProjectInfo" resultType="projectVO">
		SELECT project_id,
				project_name,
				project_access,
				manager_accp,
				write_access,
				update_access,
				board_access,
				comment_access,
				file_access,
				dept_id
		FROM project
		WHERE project_id = #{projectId}
	</select>

	<!-- 프로젝트 수정 -->
	<update id="updateProject" parameterType="projectVO">
		UPDATE project
		SET project_name = #{projectName},
			project_access = #{projectAccess},
			manager_accp = #{managerAccp},
			write_access = #{writeAccess},
			update_access = #{updateAccess},
			board_access = #{boardAccess},
			comment_access = #{commentAccess},
			file_access = #{fileAccess},
			dept_id = #{deptId}
		WHERE project_id = #{projectId}
	</update>
	
	<!-- 프로젝트 삭제  프로시저로 수정@@!!!-->
	<delete id="deleteProject" parameterType="int">
		DELETE FROM project
		WHERE project_id = #{projectId}
	</delete>
	
	<!-- 프로젝트 게시글 리스트 -->
	<select id="getBoardList" resultType="BoardVO">
		SELECT 	p.prj_board_id,        
				p.prj_board_title,     
				p.prj_board_subject,  
				p.prj_board_regdate,            
				p.member_id,            
				p.insp_yn,              
				p.pin_yn,                
				p.board_type,           
				p.project_id,                 
				p.coordinate,
				m.member_name
		FROM 	prj_board p
		JOIN    member m ON p.member_id = m.member_id
		WHERE 	prj_board_id
		NOT IN 	(SELECT	prj_board_id
				FROM	prj_task
				WHERE	high_task_id IS NOT NULL)
		AND		project_id = #{projectId}
		ORDER BY prj_board_regdate DESC
	</select>
	
	<!-- 부서 정보 조회 (회사 번호)-->
	<select id="getDeptInfo" parameterType="int" resultType="DeptVO">
		SELECT	dept_id,
				dept_name
		FROM	department
		WHERE	company_id = #{companyId}
		ORDER BY	dept_id
	</select>
	
	<!-- 부서 정보 조회 (부서 번호)-->
	<select id="getDeptInfoByDeptId" parameterType="int" resultType="DeptVO">
		SELECT	dept_id,
				dept_name
		FROM	department
		WHERE	dept_id = #{deptId}
	</select>
	
	<!-- 프로젝트 참여자 등록 -->
	<insert id="insertParticipant" parameterType="PrjParticirVO">
		<selectKey keyProperty="prjParticirId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(prj_particir_id), 0) + 1
			FROM prj_particir
		</selectKey>
			INSERT INTO prj_particir
									(	prj_particir_id,
										member_id,
										manager,
										project_id,
										alarm_yn,
										particir_accp,
										project_markup
										)
							VALUES
									(	#{prjParticirId}, 
										#{memberId},
										#{manager},
										#{projectId},
										'A1',
										#{particirAccp},
										#{projectMarkup}
										)
	</insert>
	
	<!-- 프로젝트 참여자 조회 -->
	<select id="getParticirList" resultType="PrjParticirVO">
		SELECT	p.prj_particir_id,
				p.member_id,
				p.manager,
				p.project_id,
				p.alarm_yn,
				p.project_markup,
				p.particir_accp,
				m.member_name,
				m.real_profile_path
		FROM	prj_particir p
		JOIN	member m
		ON		p.member_id=m.member_id
		WHERE	project_id = #{projectId}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 주현 -->

<!-- 북마크가 된 개별 프로젝트 조회 승인된 것만 출력 -->
<select id="searchPrj" parameterType="String" resultType="ProjectVO">
  SELECT
	    p.project_id,
	    p.project_name,
	    find_subcode(p.project_access) AS project_access,
	    find_subcode(p.manager_accp) AS manager_accp,
	    find_subcode(p.write_access) AS write_access,
	    find_subcode(p.update_access) AS update_access,
	    find_subcode(p.board_access) AS board_access,
	    find_subcode(p.file_access) AS file_access,
	    find_subcode(p.comment_access) AS comment_access, 
	    pp1.prj_particir_num,
	    find_subcode(pp2.project_markup) AS project_markup, 
	    find_subcode(pp2.particir_accp) AS particir_accp,
	    p.dept_id,
	    find_subcode(p.project_cls) AS project_cls
	FROM
	    project p
	JOIN (
	    SELECT
	        project_id,
	        COUNT(*)  AS prj_particir_num
	    FROM
	        prj_particir
	    GROUP BY
	        project_id
	) pp1 ON (p.project_id = pp1.project_id)
    JOIN(
        SELECT
            project_markup,
            project_id,
            member_id,
            particir_accp
        FROM
            prj_particir
    )pp2 ON(pp1.project_id=pp2.project_id)
	WHERE
	    pp2.member_id=#{memberId}
 	AND
        pp2.project_markup='A1'
    AND
        pp2.particir_accp='A1'
	ORDER BY p.project_id  
</select>

<!-- 북마크가 안 된 개별 프로젝트 조회--> 
<select id="searchPrjCls" parameterType="String" resultType="ProjectVO">
	   SELECT
	    p.project_id,
	    p.project_name,
	    find_subcode(p.project_access) AS project_access,
	    find_subcode(p.manager_accp) AS manager_accp,
	    find_subcode(p.write_access) AS write_access,
	    find_subcode(p.update_access) AS update_access,
	    find_subcode(p.board_access) AS board_access,
	    find_subcode(p.file_access) AS file_access,
	    find_subcode(p.comment_access) AS comment_access, 
	    pp1.prj_particir_num,
	    find_subcode(pp2.project_markup) AS project_markup, 
	    find_subcode(pp2.particir_accp) AS particir_accp,
	    p.dept_id,
	    find_subcode(p.project_cls) AS project_cls
	FROM
	    project p
	JOIN (
	    SELECT
	        project_id,
	        COUNT(*)  AS prj_particir_num
	    FROM
	        prj_particir
	    GROUP BY
	        project_id
	) pp1 ON (p.project_id = pp1.project_id)
    JOIN(
        SELECT
            project_markup,
            project_id,
            member_id,
            particir_accp
        FROM
            prj_particir
    )pp2 ON(pp1.project_id=pp2.project_id)
	WHERE
	    pp2.member_id=#{id}
        AND
        pp2.project_markup='A2'
        AND
        pp2.particir_accp='A1'
	ORDER BY p.project_id
</select>


<!-- 회사별 프로젝트 조회 -->
<select id="selectFromCompany" parameterType="int" resultType="com.worksb.hi.project.service.ProjectVO">
	SELECT
       p.project_id,
       p.project_name,
       find_subcode(p.project_access) AS project_access,
       find_subcode(p.manager_accp) AS manager_accp,
       find_subcode(p.write_access) AS write_access,
       find_subcode(p.update_access) AS update_access,
       find_subcode(p.board_access) AS board_access,
       find_subcode(p.file_access) AS file_access,
       find_subcode(p.comment_access) AS comment_access, 
       p.dept_id,
       find_subcode(p.project_cls) AS project_cls,
       (SELECT COUNT(*) from prj_particir pp WHERE p.project_id=pp.project_id) AS prj_particir_num
   FROM
       project p
   WHERE
      dept_id IN (SELECT dept_id FROM department WHERE company_id= #{companyId})       
      AND p.project_cls= nvl(#{projectCls},'A2')
   	  <if test="deptId!=null">
   	  	AND dept_id=#{deptId}
   	  </if>
   ORDER BY p.project_id
</select>

<!-- 즐겨찾기 갱신 -->
<update id="updateStar" parameterType="ProjectVO">
	UPDATE prj_particir SET 
	       project_markup=#{projectMarkup}
	 WHERE project_id=#{projectId} 
	   AND member_id=#{memberId}
</update>

<!-- 로그인된 아이디가 참여하고 있는 프로젝트 -->
<select id="selectAllparticier" parameterType="String" resultType="PrjParticirVO">
	SELECT
		prj_particir_id 
		,member_id
		,find_subcode(manager) AS manager  
		,project_id         
		,find_subcode(alarm_yn) AS alarm_yn
		,find_subcode(project_markup) AS project_markup
		,find_subcode(particir_accp) AS particir_accp
	FROM prj_particir
	WHERE member_id=#{memberId}
</select>
</mapper>